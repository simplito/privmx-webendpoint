#!/bin/bash
set -e
SCRIPT_PATH=$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )
if [ -z "$1" ]; then
    echo "$0: Parameter missing."
    exit -1;
fi
VERSION=$1

source "$SCRIPT_PATH/config.sh"
source "$EMSDK_DIR/emsdk_env.sh"

PSON_DIR="$SOURCE_DIR/pson-cpp-$VERSION"

if [ -d "$PSON_DIR" ];
then
    echo "$PSON_DIR directory exists. Skip download of sources."
else
	echo "$PSON_DIR directory does not exist. Get sources..."
    ZIP_TMP_DIR=$(mktemp -d)
    OUT_TMP_DIR=$(mktemp -d)
    curl -L \
    -H "Accept: application/vnd.github+json" \
    -H "X-GitHub-Api-Version: 2022-11-28" \
    https://api.github.com/repos/simplito/pson-cpp/zipball/$VERSION -o "$ZIP_TMP_DIR/$VERSION.zip"

    unzip "$ZIP_TMP_DIR/$VERSION.zip" -d $OUT_TMP_DIR
    rm -rf $ZIP_TMP_DIR
    cd $OUT_TMP_DIR
    ZIP_INNER_DIR=`ls`
    mv $ZIP_INNER_DIR $PSON_DIR
    cd "$SOURCE_DIR"
    rm -rf $OUT_TMP_DIR
fi


cd "$PSON_DIR"

# apply config patches for emscripte
set +e
patch_out=$(patch --forward -d "$PSON_DIR" -p1 -i "$BASE_DIR/patches/pson-cpp.patch")
status=$?
if [ $status -eq 1 ]; then
    if [[ $patch_out == *"FAILED"* ]]; then
        echo "Patching PSON FAILED"; exit -1;
    fi
fi
set -e

if [ ! -d "./build-emscripten" ]; then
    mkdir -p build-emscripten && cd build-emscripten
    emcmake cmake .. -D CMAKE_BUILD_TYPE=MinSizeRel
else
    cd build-emscripten
fi
emmake make -j20
emmake make install
